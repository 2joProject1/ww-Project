<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="offMapper">
	<resultMap type="off" id="offResultSet">
		<result column="OFF_NO" property="offNo" />
		<result column="OFF_DEPT" property="offDept" />
		<result column="OFF_WRITER" property="offWriter" />
		<result column="OFF_START" property="offStart" />
		<result column="OFF_END" property="offEnd" />
		<result column="OFF_REASON" property="offReason" />
		<result column="REQUEST_DATE" property="requestDate" />
		<result column="STATUS" property="status" />
		<result column="OFF_DAYS" property="offDays" />
		<result column="MEMBER_NAME" property="memberName" />
		<result column="DEPT_NAME" property="deptName" />
	</resultMap>
	
	<insert id="insertOff" parameterType="off">
		INSERT INTO
			DAYOFF
				(
				OFF_NO
				,OFF_DEPT
				,OFF_WRITER
				,OFF_START
				,OFF_END
				,OFF_REASON
				,OFF_DAYS
				)
			VALUES
				(
				SEQ_ONO.NEXTVAL
				,#{offDept}
				,#{offWriter}
				,#{offStart}
				,#{offEnd}
				,#{offReason}
				,#{offDays}
				)	
	</insert>
	
	<select id="selectCountOff"  resultType="_int" parameterType="_int" >
		SELECT COUNT(*)
		FROM DAYOFF
		WHERE OFF_WRITER = #{offWriter}
	</select>
	
	
	<select id="selectListOff" resultMap="offResultSet" parameterType="_int">
		SELECT 
			OFF_NO
			, T.DEPT_NO OFF_DEPT
			, M.MEMBER_NO OFF_WRITER
			, TO_CHAR(OFF_START, 'YYYY-MM-DD') OFF_START
			, TO_CHAR(OFF_END, 'YYYY-MM-DD') OFF_END
			, OFF_REASON
			, TO_CHAR(REQUEST_DATE 'YYYY-MM-DD') AS REQUEST_DATE
			, D.STATUS
			, OFF_DAYS
			, M.MEMBER_NAME MEMBER_NAME
			, T.DEPT_NAME DEPT_NAME
		FROM DAYOFF D
		JOIN DEPT T ON ( D.OFF_DEPT = T.DEPT_NO)
		JOIN MEMBER M ON (D.OFF_WRITER = M.MEMBER_NO )
		WHERE OFF_WRITER = #{offWriter}
		ORDER BY D.OFF_NO DESC
	
	</select>
	
	
	<select id="searchListOff">
	SELECT OFF_NO, T.DEPT_NO OFF_DEPT, M.MEMBER_NO OFF_WRITER, 
	OFF_START, OFF_END, OFF_REASON, REQUEST_DATE, D.STATUS, OFF_DAYS,
	M.MEMBER_NAME MEMBER_NAME, T.DEPT_NAME DEPT_NAME
	FROM DAYOFF D
	JOIN DEPT T ON ( D.OFF_DEPT = T.DEPT_NO)
	JOIN MEMBER M ON (D.OFF_WRITER = M.MEMBER_NO )
	WHERE REQUEST_DATE BETWEEN #{offStart} AND #{offEnd}
	AND OFF_WRITER = #{offWriter}
	ORDER BY D.OFF_NO DESC
	
	</select>

</mapper>
